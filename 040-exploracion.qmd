---
lang: es
format: 
  html:
    encoding: 'latin1'
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, fig.showtext = T)
```

# La exploración de los datos. _Stemplot_ y diagrama de caja (_boxplot_)

En este capítulo veremos cómo describir un conjunto de datos de forma visual. Seguiremos el flujo de trabajo que hemos visto en el capítulo anterior, de una manera ordenada, utilizando herramientas y técnicas específicas. 

## Explorando los datos con Excel y R: un ejemplo.

Supongamos que queremos medir la altura de un grupo de alumnos de nuestra clase. Éste es nuestro grupo:

![](01-imagenes/grupo1.jpg)

Realizamos la medida de altura de cada persona y registramos los valores en una hoja de cálculo, siguiendo las buenas prácticas que hemos visto al estudiar los *datos ordenados*.

![](01-imagenes/aula1.png)

Guardaremos esta tabla en un archivo CSV y lo importamos a un dataframe de R para su uso a lo largo del capítulo. Utilizamos la opción `fileEncoding='latin1'` para importar correctamente los caracteres acentuados.

```{r message=FALSE, warning=FALSE}
library(tidyverse)
df_aula <- read.csv2("excel-R/aula1.csv",fileEncoding='latin1')
df_aula
```

## El diagrama de tallo y hojas (*stem and leaf plot* o *stemplot*)

El *stemplot* recibe este nombre porque el dibujo que resulta se asemeja a un tallo el que le salen las hojas que son los datos individuales. Para construirlo, quitamos el último dígito a la derecha de nuestros valores y colocamos verticalmente los valores resultantes ordenándolos de menor a mayor, y evitando las repeticiones. Paraevitar errores en la escala, debemos incluir los valores intermedios aunque no haya ninguno en nuestros datos (en el ejemplo, el valor 16 que correspondería a los 160). Esto forma el "tallo" de nuestro diagrama:

![](01-imagenes/aula1-stemplot-paso1.png)

A continuación añadimos las hojas en la celda a la derecha, que consisten en los valores que hemos "cortado" de nuestro árbol, uno al lado de otro, incluyendo esta vez los valores repetidos, en orden de menor a mayor. Por ejemplo, para el valor 135, descartamos 13 y utlizamos 5; para el valor 138, descartamos 13 y utilizamos 8, y así sucesivamente para todos los valores.

![](01-imagenes/aula1-stemplot-paso2.png)

El diagrama nos dice que nuestros valores son 135, 138, 140, 140, 145, ... Podemos ver que los valores en torno a 150 cm son los más frecuentes, y que hay un valor alto (175) que se separa un poco del resto.

R permite realizar el *stemplot* mediante la función $stem()$ de forma automática:

```{r message=FALSE, warning=FALSE}
stem(df_aula$altura_cm)
```

El *stemplot* es muy sencillo de hacer y nos da una visión rápida de la *distribución* de nuestros valores, así como de la posible existencia de valores que se separan del conjunto. Estos valores alejados, que se conocen en inglés como *outliers*, tienen mucha importancia en el analisis e interpretación de los datos, como veremos más adelante.

La ventaja principal del *stemplot* es que mantiene los valores originales de las observaciones, y puede hacerse fácilmente con bolígrafo y papel, sin necesidad de más herramientas.

## Diagramas de caja (*boxplot*) y resumen de cinco números.

Este gráfico fue creado por el estadístico John Tukey en 1977, y es una herramienta fundamental en la exploración de datos. Se basa en un grupo de medidas que se utiliza ampliamente en la descripción de conjuntos de datos, el conjunto de **cuartiles**. Si dividimos un grupo de datos **ordenados** en cuatro partes iguales, mediante **tres** puntos de corte, llamamos **primer cuartil** o $Q1$ al valor que se situa en el 25%; **segundo cuartil**, o $Q2$, al valor que se sitúa en el centro (50%), y **tercer cuartil**, o $Q3$, al punto que se situa en el 75% de los datos. A estos tres valores añadimos el **mínimo** y el **máximo**, y tenemos un conjunto de **cinco números** que nos permiten describir la forma de la distribución de datos con cierta precisión. El segundo cuartil ($Q2$), que corresponde al 50% de los datos, se conoce habitualmente como **mediana**. El valor resultante de restar $Q3-Q1$ es lo que se conoce como **rango intercuartil** o $IQR$, y es una medida de la dispersión de la distribución de datos (mide la amplitud de la distribución).

El **diagrama de caja**, también conocido como *boxplot*, es un gráfico que permite resumir las características principales de un conjunto de datos utilizando estos cinco números, tal como se explica a continuación. Sus ventajas son:

- Muestra la mediana y los cuartiles (Q1 y Q3) de los datos.
- Permite identificar la simetría de la distribución: si la mediana no está en el centro, la distribución no es simétrica.
- Permite detectar posibles valores atípicos, representando los valores atípicos (*outliers*) que están lejos del resto de los datos (un valor es atípico si está más allá de \(Q3 + 1.5 \cdot IQR\) o \(Q1 - 1.5 \cdot IQR\).

La construcción de un diagrama de caja es como sigue:

![](01-imagenes/boxplot.svg)

Microsoft Excel no dispone de un diseño de gráficos de caja que sea práctico, por lo que recurriremos siempre a R para realizarlos.

Como casi siempre, hay una función de base que dibuja un *boxplot* y también una geometría de `ggplot()`que lo hace: `geom_boxplot()`, con muchas más opciones de diseño y formato que la opción de base.

```{r}
#| label: fig-boxplot
#| fig-cap: "Boxplot con los gráficos básicos de R"

boxplot(df_aula$altura_cm)
```
Vamos a repetir el gráfico para los datos de producción de queso camembert, usando ahora los gráficos básicos y los de `ggplot()`:

```{r}
#| label: fig-boxplot2
#| fig-cap: "Ejemplos de boxplot"
#| fig-subcap: 
#|   - "Boxplot básico de R"
#|   - "Boxplot utilizando `ggplot()`"
#| layout-ncol: 2

df_camembert <- read.csv2("excel-R/camembert.csv",fileEncoding='latin1')

boxplot(df_camembert$est)

df_camembert |>
  ggplot(aes(x="", y=est))+
  geom_boxplot() +
  theme_bw() +
  theme(axis.text.x = element_blank(),  # Oculta las etiquetas del eje x
        axis.ticks.x = element_blank()) # Oculta las marcas del eje x
```

Un uso muy interesante del boxplot en R consiste en agrupar los boxplot de una variable en funcion de otra. En este caso, agrupamos el extracto seco por meses previa agrupación de la fecha. Esta agrupación puede hacerse tanto en los gráficos básicos de R como en `ggplot()`:

```{r}
#| label: fig-boxplot3
#| fig-cap: "Ejemplos de boxplot"
#| fig-subcap: 
#|   - "Boxplot básico de R"
#|   - "Boxplot utilizando `ggplot()`"
#| layout-ncol: 2

df_camembert$mes <- format(as.Date(df_camembert$fecha), "%m")
boxplot (df_camembert$est~df_camembert$mes)

df_camembert |>
  mutate (mes = format(as.Date(fecha), "%m")) |>
  ggplot(aes(x = mes, y = est)) +
    geom_boxplot() +
    labs(title = "Boxplot de 'est' por Meses",
       x = "Mes",
       y = "Valor de est") +
    theme_minimal()
```