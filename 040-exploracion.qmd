---
lang: es
format: 
  html:
    encoding: 'latin1'
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, fig.showtext = T)
```

# La exploración de los datos mediante gráficos.

En este capítulo esyudiaremos cómo describir un conjunto de datos de forma visual, utilizando varios tipos de gráficos distintos:

-   *Stemplot*
-   Histograma
-   Diagrama de caja o *boxplot*

Veremos la relación visual entre un histograma y un diagrama de caja, y aprenderemos también a construir tablas de frecuencias en Excel y en R. Finalmente, veremos algunos otros tipos de gráficos que son útiles para aplicaciones concretas, como los gráficos de series temporales.

## Explorando los datos con Excel y R: un ejemplo.

Supongamos que queremos medir la altura de un grupo de alumnos de nuestra clase. Éste es nuestro grupo:

![](01-imagenes/grupo1.jpg)

Realizamos la medida de altura de cada persona y registramos los valores en una hoja de cálculo, siguiendo las buenas prácticas que hemos visto al estudiar los *datos ordenados*.

![](01-imagenes/aula1.png)

Guardaremos esta tabla en un archivo CSV y lo importamos a un dataframe de R para su uso a lo largo del capítulo. Utilizamos la opción `fileEncoding='latin1'` para importar correctamente los caracteres acentuados.

```{r message=FALSE, warning=FALSE}
library(tidyverse)
df_aula <- read.csv2("excel-R/aula1.csv",fileEncoding='latin1')
df_aula
```

## El diagrama de tallo y hojas (*stem and leaf plot* o *stemplot*)

El *stemplot* recibe este nombre porque el dibujo que resulta se asemeja a un tallo el que le salen las hojas que son los datos individuales. Para construirlo, quitamos el último dígito a la derecha de nuestros valores y colocamos verticalmente los valores resultantes ordenándolos de menor a mayor, y evitando las repeticiones. Para evitar errores en la escala, debemos incluir los valores intermedios aunque no haya ninguno en nuestros datos (en el ejemplo, el valor 16 que correspondería a los 160). Esto forma el "tallo" de nuestro diagrama:

![](01-imagenes/aula1-stemplot-paso1.png)

A continuación añadimos las hojas en la celda a la derecha, que consisten en los valores que hemos "cortado" de nuestro árbol, uno al lado de otro, incluyendo esta vez los valores repetidos, en orden de menor a mayor. Por ejemplo, para el valor 135, descartamos 13 y utlizamos 5; para el valor 138, descartamos 13 y utilizamos 8, y así sucesivamente para todos los valores.

![](01-imagenes/aula1-stemplot-paso2.png)

El diagrama nos dice que nuestros valores son 135, 138, 140, 140, 145, ... Podemos ver que los valores en torno a 150 cm son los más frecuentes, y que hay un valor alto (175) que se separa un poco del resto.

R permite realizar el *stemplot* mediante la función $stem()$ de forma automática:

```{r message=FALSE, warning=FALSE}
stem(df_aula$altura_cm)
```

El *stemplot* es muy sencillo de hacer y nos da una visión rápida de la *distribución* de nuestros valores, así como de la posible existencia de valores que se separan del conjunto. Estos valores alejados, que se conocen en inglés como *outliers*, tienen mucha importancia en el analisis e interpretación de los datos, como veremos más adelante.

La ventaja principal del *stemplot* es que mantiene los valores originales de las observaciones, y puede hacerse fácilmente con bolígrafo y papel, sin necesidad de más herramientas.

## Distribuciones de frecuencias

El *stemplot* agrupa nuestros valores y nos ayuda a visualizar la frecuencia de cada valor, o, mejor, la frecuencia de valores en el intervalo entre cada valor. Si agrupamos nuestros valores por intervalos, y contamos el número de observaciones que aparecen en cada intervalo, obtenemos una *distribución de frecuencias*, que puede expresarse de forma *absoluta* o *relativa*.

-   La **frecuencia absoluta** es un *recuento simple* de cuántas veces aparece cada valor en un conjunto de datos.
-   La **frecuencia relativa** nos muestra la *proporción* de cada valor frente al total. Puede expresarse como fracción (entre 0 y 1) o como porcentaje (respecto a 100)

La tabla a continuación muestra una distribución de frecuencias, calculada mediante una tabla dinámica de Excel.

![](01-imagenes/aula1-td-frec.png)

También podemos calcular las frecuencias absolutas y relativas en R; en este caso, dado que los intervalos se han calulado de forma ligeramente diferente, las frecuencias calculadas son también ligeramente diferentes de las que hemos obtenido en Excel.

```{r message=FALSE, warning=FALSE}
library (tidyverse)
df_camembert <- read.csv2("excel-R/camembert.csv",fileEncoding='latin1')
df_camembert |>
  mutate (grupo = cut_interval(est, 4)) |>
  group_by(grupo) |>
  summarise (frec_abs = n()) |>
  mutate(frec_rel = frec_abs / sum(frec_abs))
```

R utiliza los símbolos `(` y `[` para definir los intervalos, tal como se hace en matemáticas.

-   Intervalo **abierto**: El símbolo `(` se utiliza para denotar un intervalo abierto. Por ejemplo,el intervalo $(a, b)$ representa todos los números reales mayores que $a$ y menores que $b$ (excluye los valores $a$ y $b$).
-   Intervalo **cerrado o semiabierto**:El símbolo `[` se utiliza para denotar un intervalo cerrado o semiabierto. Por ejemplo:
    -   $[a, b]$ representa todos los números reales mayores o iguales que $a$ y menores o iguales que $b$ (incluye $a$ y $b$).
    -   $[a, b)$ representa todos los números reales mayores o iguales que $a$ y menores que $b$ (incluye $a$, pero excluye $b$).

## Diagramas de barra e histogramas

Cuando nuestra variable es *discreta*, podemos representar las frecuencias de cada valor de forma gráfica utilizando un diagrama de barras. Este diagrama utiliza barras rectangulares para representar la frecuencia de cada categoría.

Un histograma es un diagrama que utiliza las barras rectangulares para hacer un gráfico de la distribución de valores continuos, agrupados en clases. La anchura de esos grupos o clases (en inglés, *bins*), puede variarse, lo que cambia el perfil del gráfico obtenido.

## Histogramas en Excel

La tabla dinámica que hemos construido en Excel ha transformado nuestra variable continua, `altura_cm`, en una variable discreta, al agrupar los valores en intervalos. Si representamos las frecuencias absolutas de nuestra tabla dinámica anterior, el diagrama resultante sería éste:

![](01-imagenes/aula1-diag-barras.png)

En el caso de la tabla dinámica, Excel no construye el diagrama de barras a partir de la tabla de los valores originales, sino de las categorías de la tabla dinámica. Dado que estas categorías (los grupos que ha formado la tabla dinámica) son discretas, Excel utiliza el resultado de la tabla dinámica para hacer el gráfico con un diagrama de barras.

Este diagrama muestra su utilidad cuando representamos la distribución de un conjunto de valores más grande que nuestros once alumnos. Veamos su aplicación a los datos diarios de una fabricación de queso camembert a lo largo de un año.

La tabla de datos tiene esta estructura:

![](01-imagenes/camembert-tabla-datos.png)

Aunque no se muestran en la figura, la tabla está formada por 211 casos. Analicemos los datos con Excel. Los pasos son:

1.  Construir la tabla dinámica
2.  Agrupar los datos
3.  Insertar el gráfico a partir de la tabla

Con una agrupación de datos en intervalos de 1, esta es nuestra tabla dinámica:

![](01-imagenes/camembert-td.png)

![](01-imagenes/camembert-histo1.png)

Si nuestro intervalo de clase fuese de 2 puntos de extracto seco en vez de 1, el histograma tendría este aspecto:

![](01-imagenes/camembert-histo2.png)

Si por el contrario hubiésemos agrupado en intervalos de 0,5 puntos, el histograma sería este:

![](01-imagenes/camembert-histo3.png)

La decisión de agrupar las variables continuas en intervalos de diferentes anchuras tiene efectos sobre el aspecto del gráfico; no obstante, debemos ser capaces de interpretar que la distribución de los valores es la misma en los tres casos: hay una mayoría de casos con valores entre 46 y 48, y muy pocos casos con valores muy bajos o muy altos. En este caso, la distribución de los valores es aproximadamente simétrica, y se reparten alrededor de una mayoría de valores centrales.

En otras ocasiones, nos encontramos con datos que son asimétricos: hay una mayoría de valores bajos o bien de valores altos. Veamos un caso: los recuentos bacterianos de bacterias coliformes, que tenemos en la última columna a la derecha de nuestra tabla, en la variable ´coliformes´.

![](01-imagenes/camembert-graf-colis.png)

En este caso, vemos que la mayoría de los casos tienen valor cero. Es el caso de los recuentos de bacterias contaminantes, en el que la mayoría de los análisis tienen recuentos cero o muy bajos, y sólo en pocos casos tienen valores altos. Veremos con más detalle cómo tratar estas distribuciones cuando hablemos de las distribuciones de probabilidad, en capítulos posteriores.

Como vemos, aunque Excel utiliza el diagrama de barras para construir el gráfico, en realidad estamos construyendo un histograma, en dos etapas: agrupación de los datos y creación del gráfico. Al construir un histograma en R, el programa realiza automáticamente ambos pasos. Para verlo por partes, vamos a construir la tabla de frecuencias y el histograma en R.

```{r message=FALSE, warning=FALSE}
df_camembert |>
  mutate (grupo = cut_width(est, width=1, boundary=1)) |>
  group_by(grupo) |>
  summarise (frec_abs = n()) |>
  mutate(frec_rel = frec_abs / sum(frec_abs))
```

R tiene una función básica, la función `hist()`, que construye el histograma directamente sin necesidad de hacer previamente una tabla de frecuencias (en realidad, la tabla de frecuencias se calcula internamente).

```{r message=FALSE, warning=FALSE}
#| label: fig-histo1
#| fig-cap: "Ejemplos de histogramas"
#| fig-subcap: 
#|   - "Función básica de R"
#|   - "Función ggplot()"
#| layout-ncol: 2

hist(df_camembert$est)

df_camembert |>
  ggplot(aes(x=est)) +
    geom_histogram()
```

En general, son más útiles las opciones de la función `ggplot()`, en la biblioteca `tidyverse`.

En los histogramas de los recuentos bacterianos,utilizamos una opción para aumentar el número de barras que queremos en el histograma: `breaks=` en la función base, `bins=` en `ggplot()`:

```{r}
#| label: fig-histo2
#| fig-cap: "Ejemplos de histogramas"
#| fig-subcap: 
#|   - "Función básica de R"
#|   - "Función ggplot()"
#| layout-ncol: 2

hist(df_camembert$coliformes, breaks=50)

df_camembert |>
  ggplot(aes(x=coliformes)) +
    geom_histogram(bins=50)
```

En casos de distribuciones muy asimétricas, a veces es conveniente aplicar una transformación a los datos, tal como el logaritmo decimal, mediante la función `log10()`; esto facilita la interpretación del gráfico:

```{r}
df_camembert |>
  ggplot(aes(x=log10(coliformes+1))) +
    geom_histogram(bins=50)
```

## Gráficos de densidad

Un gráfico de densidad en R es una representación visual suavizada de la distribución de un conjunto de datos. A diferencia de los histogramas, que dividen los datos en intervalos y cuentan las frecuencias, los gráficos de densidad utilizan técnicas estadísticas no paramétricas para estimar la función de densidad de probabilidad.

Excel no permite la representación de los gráficos de densidad; en R pueden hacerse con la función `ggplot()`simplemente añadiendo la geometría `geom_density()`

```{r}
#| label: fig-charts
#| fig-cap: "Ejemplos de diagramas de densidad"
#| fig-subcap: 
#|   - "EST"
#|   - "coliformes"
#| layout-ncol: 2

df_camembert |>
  ggplot(aes(x=est)) +
    geom_density()

df_camembert |>
  ggplot(aes(x=log(coliformes+1))) +
    geom_density()
```

Podemos representar simultáneamente el histograma y la función de densidad:

```{r}
df_camembert |>
  ggplot(aes(x=est)) +
    geom_histogram(aes(y = ..density..), bins = 20, fill = "lightblue", color = "black") +
    geom_density(color = "red", size = 1) +
    labs(title = "Histograma y densidad", x = "Valores", y = "Densidad")
```

La ventaja de los gráficos de densidad es que como no tenemos que fraccionar los datos en intervalos arbitrarios, no estamos afectados por el efecto visual de la anchura de estos intervalos. También hay otras ventajas desde el punto de vista estadístico, que veremos al hablar de las distribuciones de probabilidad.

## Diagramas de caja (*boxplot*) y resumen de cinco números.

Este gráfico fue creado por el estadístico John Tukey en 1977, y es una herramienta fundamental en la exploración de datos. Se basa en un grupo de medidas que se utiliza ampliamente en la descripción de conjuntos de datos, el conjunto de **cuartiles**. Si dividimos un grupo de datos **ordenados** en cuatro partes iguales, mediante **tres** puntos de corte, llamamos **primer cuartil** o $Q1$ al valor que se situa en el 25%; **segundo cuartil**, o $Q2$, al valor que se sitúa en el centro (50%), y **tercer cuartil**, o $Q3$, al punto que se situa en el 75% de los datos. A estos tres valores añadimos el **mínimo** y el **máximo**, y tenemos un conjunto de **cinco números** que nos permiten describir la forma de la distribución de datos con cierta precisión. El segundo cuartil ($Q2$), que corresponde al 50% de los datos, se conoce habitualmente como **mediana**. El valor resultante de restar $Q3-Q1$ es lo que se conoce como **rango intercuartil** o $IQR$, y es una medida de la dispersión de la distribución de datos (mide la amplitud de la distribución).

El **diagrama de caja**, también conocido como *boxplot*, es un gráfico que permite resumir las características principales de un conjunto de datos utilizando estos cinco números, tal como se explica a continuación. Sus ventajas son:

-   Muestra la mediana y los cuartiles (Q1 y Q3) de los datos.
-   Permite identificar la simetría de la distribución: si la mediana no está en el centro, la distribución no es simétrica.
-   Permite detectar posibles valores atípicos, representando los valores atípicos (*outliers*) que están lejos del resto de los datos (un valor es atípico si está más allá de (Q3 + 1.5 \cdot IQR) o (Q1 - 1.5 \cdot IQR).

La construcción de un diagrama de caja es como sigue:

![](01-imagenes/boxplot.svg)

Microsoft Excel no dispone de un diseño de gráficos de caja que sea práctico, por lo que recurriremos siempre a R para realizarlos.

Como casi siempre, hay una función de base que dibuja un *boxplot* y también una geometría de `ggplot()`que lo hace: `geom_boxplot()`, con muchas más opciones de diseño y formato que la opción de base.

```{r}
#| label: fig-boxplot
#| fig-cap: "Boxplot con los gráficos básicos de R"

boxplot(df_aula$altura_cm)
```

Vamos a repetir el gráfico para los datos de producción de queso camembert, usando ahora los gráficos básicos y los de `ggplot()`:

```{r}
#| label: fig-boxplot2
#| fig-cap: "Ejemplos de boxplot"
#| fig-subcap: 
#|   - "Boxplot básico de R"
#|   - "Boxplot utilizando `ggplot()`"
#| layout-ncol: 2

df_camembert <- read.csv2("excel-R/camembert.csv",fileEncoding='latin1')
df_camembert$fecha <- as.Date(df_camembert$fecha, format("%d/%m/%Y"))

boxplot(df_camembert$est)

df_camembert |>
  ggplot(aes(x="", y=est))+
  geom_boxplot() +
  theme_bw() +
  theme(axis.text.x = element_blank(),  # Oculta las etiquetas del eje x
        axis.ticks.x = element_blank()) # Oculta las marcas del eje x
```

Un uso muy interesante del boxplot en R consiste en agrupar los boxplot de una variable en funcion de otra. En este caso, agrupamos el extracto seco por meses previa agrupación de la fecha. Esta agrupación puede hacerse tanto en los gráficos básicos de R como en `ggplot()`:

```{r}
#| label: fig-boxplot3
#| fig-cap: "Ejemplos de boxplot"
#| fig-subcap: 
#|   - "Boxplot básico de R"
#|   - "Boxplot utilizando `ggplot()`"
#| layout-ncol: 2

df_camembert$mes <- format(df_camembert$fecha, "%m")
boxplot (df_camembert$est~df_camembert$mes)

df_camembert |>
  mutate (mes = format(fecha, "%m")) |>
  ggplot(aes(x = mes, y = est)) +
    geom_boxplot() +
    labs(title = "Boxplot de 'est' por Meses",
       x = "Mes",
       y = "Valor de est") +
    theme_minimal()
```

## Histogramas y diagramas de caja

Resulta muy útil comprender visualmente la relación entre el *boxplot* y el histograma para entender la distribución de los datos. En la gráfica siguiente se representan ambos simultáneamente

```{r}
df_camembert |>
ggplot(aes(x = est)) +
  geom_histogram(fill = "lightblue", color = "black", bins = 20, alpha = 0.7) +
  geom_boxplot(width = 2, fill = "darkgrey", alpha = 0.7, position = position_nudge(y = -2)) +
  labs(title = "Histograma y Boxplot", y = "Frecuencias")

```

```{r}
df_camembert |>
ggplot(aes(x = log10(coliformes+1))) +
  geom_histogram(fill = "lightblue", color = "black", bins = 20, alpha = 0.7) +
  geom_boxplot(width = 4, fill = "darkgrey", alpha = 0.7, position = position_nudge(y = -4)) +
  labs(title = "Histograma y Boxplot", y = "Frecuencias")

```

## Gráficos de dispersión

Un gráfico de dispersión, también conocido como diagrama de dispersión o _scatter plot_, es una representación gráfica que utiliza puntos para mostrar la relación entre dos variables numéricas. Cada punto en el gráfico representa una observación del conjunto de datos y se coloca en el plano cartesiano de acuerdo con sus valores en las dos variables que se están comparando.

Un gráfico de dispersión se compone mediante puntos:

- Cada punto en el gráfico representa una observación.
- La posición del punto en el gráfico está determinada por los valores de las dos variables para esa observación.

Los gráficos de dispersión son útiles para identificar varios aspectos de la relación entre las dos variables:

- Si los puntos tienden a agruparse a lo largo de una línea recta ascendente, esto indica una correlación positiva (a medida que una variable aumenta, la otra también lo hace).
- Si los puntos se agrupan a lo largo de una línea descendente, esto indica una correlación negativa (a medida que una variable aumenta, la otra disminuye).
- Si los puntos forman una curva en lugar de una línea recta, esto sugiere una relación no lineal entre las variables.
- La dispersión de los puntos puede indicar la variabilidad de los datos. Puntos que están muy lejos del patrón general pueden ser valores atípicos.


```{r}
#| label: fig-grafdisp
#| fig-cap: "Ejemplos de gráfico de dispersión"
#| fig-subcap: 
#|   - "Gráfico de dispersion básico de R"
#|   - "Gráfico de dispersion utilizando `ggplot()`"
#| layout-ncol: 2
#| 
plot(df_camembert$est, df_camembert$mg)

df_camembert |>
  ggplot(aes(x=mg,y=est))+
  geom_point() +
  theme_bw()

```

Los gráficos de dispersión son una herramienta esencial en el análisis de datos exploratorio, ya que permiten visualizar relaciones y patrones en los datos, identificar correlaciones y detectar posibles anomalías. Esta información es crucial para realizar análisis estadísticos más profundos y tomar decisiones basadas en datos.

Excel no permite hacer gráficos de dispersión directamente, aunque sí podemos hacerlos de forma indirecta. 
Ver articulo blog

## Gráficos de series temporales

Hasta ahora hemos utilizado gráficos y tablas que describen la estructura y forma de una variable, o las relaciones entre dos variables. Hay otros gráficos que tienen en cuenta la forma en la que esos datos cambian con el tiempo. En este caso, será necesario que hayamos recogido los intervalos de tiempo en los que se han producido nuestros valores en una variable de nuestra tabla.

En un gráfico de series temporales, 

- el eje horizontal (X) representa el tiempo. Los puntos de tiempo pueden ser minutos, horas, días, meses, años, etc.
- el eje vertical (Y) representa los valores de la variable que se está estudiando. Estos valores pueden ser medidas como temperatura, ventas, precios, etc.
- cada valor individual corresponde a un punto
- los valores se conectan mediante una línea que conecta los puntos de datos, mostrando cómo cambian los valores de la variable a lo largo del tiempo.
- normalmente, en un gráfico de series temporales no suelen representarse los puntos individuales para facilitar la legibilidad del gráfico.

En nuestro conjunto de datos de fabricación de queso camembert, la primera columna de la tabla recoge la variable `fecha`, lo que nos permite ordenar nuestros valores en el tiempo.

Cuando representamos los valores en el tiempo, nunca usaremos el diagrama de barras, sino el gráfico de líneas.


Ejemplo en Excel



Ejemplo en R

```{r}
#| label: fig-graftemp
#| fig-cap: "Ejemplos de gráfico de series temporales"
#| fig-subcap: 
#|   - "Gráfico de series temporales básico de R"
#|   - "Gráfico de series temporales utilizando `ggplot()`"
#| layout-ncol: 2

plot(df_camembert$fecha, df_camembert$est, type="l")

df_camembert |>
  ggplot(aes(x=fecha, y=est))+
  geom_line() +
  theme_bw()

```


Los gráficos de series temporales son útiles para:

1. **Identificar Tendencias**:
   - Una tendencia es una dirección general en la que los datos se mueven a lo largo del tiempo. Puede ser creciente, decreciente o constante.

2. **Detección de Estacionalidad**:
   - La estacionalidad se refiere a patrones que se repiten en intervalos regulares de tiempo, como las ventas de productos estacionales.

3. **Identificar Ciclos**:
   - Los ciclos son fluctuaciones que ocurren en intervalos no regulares y pueden deberse a factores económicos o de otra índole.

4. **Detección de Anomalías**:
   - Los picos y caídas repentinas pueden indicar eventos inusuales o errores en los datos.


Los gráficos de series temporales son cruciales en diversas áreas:

1. **Economía y Finanzas**:
   - Seguimiento de precios de acciones, tasas de interés y otros indicadores económicos.

2. **Ciencia y Tecnología**:
   - Monitoreo de variables ambientales, datos meteorológicos y medidas científicas.

3. **Negocios**:
   - Análisis de ventas, demanda de productos y desempeño empresarial a lo largo del tiempo.

Los gráficos de series temporales proporcionan una visión clara y concisa de cómo cambian los datos a lo largo del tiempo. Esta visualización es fundamental para el análisis predictivo, la toma de decisiones y la identificación de patrones y anomalías en los datos. 
